// <auto-generated />
using System;
using FotoToestellenApp.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FotoToestellenApp.Migrations
{
    [DbContext(typeof(FotoToestellenDbContext))]
    partial class FotoToestellenDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("FotoToestelLens", b =>
                {
                    b.Property<int>("CompatibeleFotoToestellenId")
                        .HasColumnType("int");

                    b.Property<int>("CompatibeleLenzenId")
                        .HasColumnType("int");

                    b.HasKey("CompatibeleFotoToestellenId", "CompatibeleLenzenId");

                    b.HasIndex("CompatibeleLenzenId");

                    b.ToTable("FotoToestelLens");
                });

            modelBuilder.Entity("FotoToestellenApp.Modellen.FotoToestel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AdviesPrijs")
                        .HasColumnType("double");

                    b.Property<DateOnly>("BeschikbaarSinds")
                        .HasColumnType("date");

                    b.Property<int>("MerkId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("MerkId");

                    b.HasIndex("Model")
                        .IsUnique();

                    b.ToTable("FotoToestellen");
                });

            modelBuilder.Entity("FotoToestellenApp.Modellen.Lens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AdviesPrijs")
                        .HasColumnType("double");

                    b.Property<double>("GewichtG")
                        .HasColumnType("double");

                    b.Property<int>("MerkId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Mount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MerkId", "Model")
                        .IsUnique();

                    b.ToTable("Lenzen");
                });

            modelBuilder.Entity("FotoToestellenApp.Modellen.Merk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("WebsiteUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Naam")
                        .IsUnique();

                    b.ToTable("Merken");
                });

            modelBuilder.Entity("FotoToestelLens", b =>
                {
                    b.HasOne("FotoToestellenApp.Modellen.FotoToestel", null)
                        .WithMany()
                        .HasForeignKey("CompatibeleFotoToestellenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FotoToestellenApp.Modellen.Lens", null)
                        .WithMany()
                        .HasForeignKey("CompatibeleLenzenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FotoToestellenApp.Modellen.FotoToestel", b =>
                {
                    b.HasOne("FotoToestellenApp.Modellen.Merk", "Merk")
                        .WithMany("FotoToestellen")
                        .HasForeignKey("MerkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Merk");
                });

            modelBuilder.Entity("FotoToestellenApp.Modellen.Lens", b =>
                {
                    b.HasOne("FotoToestellenApp.Modellen.Merk", "Merk")
                        .WithMany("Lenzen")
                        .HasForeignKey("MerkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Merk");
                });

            modelBuilder.Entity("FotoToestellenApp.Modellen.Merk", b =>
                {
                    b.Navigation("FotoToestellen");

                    b.Navigation("Lenzen");
                });
#pragma warning restore 612, 618
        }
    }
}
